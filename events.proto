syntax = "proto3";
package events;

option go_package = "./events";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// EventContext is a generic context attached to events and holds any value.
message EventContext {
  string id = 1;
  map<string, Value> attributes = 2;
}

// LoginEventType defines the different login result states.
enum LoginEventType {
  LOGIN_EVENT_TYPE_INVALID = 0;
  LOGIN_EVENT_TYPE_SUCCESS = 1;
  LOGIN_EVENT_TYPE_FAILED = 2;
}

// AuthenticationEvent contains the Authentication Follow lifecycle events.
message AuthenticationEvent {
  EventContext context = 1;
  LoginEventType result = 2;
  string subject = 3;
  google.protobuf.Timestamp event_time = 4;
}


// A message that can hold any of the supported value types.
message Value {
  // Must have a value set.
  oneof value {
    // A null value.
    google.protobuf.NullValue null_value = 1;
    // A boolean value.
    bool bool_value = 2;
    // An integer value.
    int64 integer_value = 3;
    // An integer value.
    uint64 unsigned_integer_value = 14;
    // A double value.
    double double_value = 4;
    // An Any value.
    google.protobuf.Any any_value = 5;
    // A timestamp value.
    google.protobuf.Timestamp value_time = 6;
    // A duration value.
    google.protobuf.Duration duration_value = 12;

    // An identifier value. Keep here to know number 13 is reserved for Identifier.
    // However, we don't have proper type for Identifier yet.
    // Identifier identifier_value = 13;

    // A string value.
    string string_value = 7;
    // A bytes value.
    bytes bytes_value = 8;
    // A geo point value representing a point on the surface of Earth.
    // An array value.
    ArrayValue array_value = 10;
    // A map value.
    MapValue map_value = 11;
  }
}

// An array value.
message ArrayValue {
  // Values in the array.
  repeated Value values = 1;
}

// A map value.
message MapValue {
  // The map's keys and values.
  map<string, Value> fields = 1;
}
